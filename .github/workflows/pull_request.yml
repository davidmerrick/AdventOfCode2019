name: PR Checks

on: [pull_request]

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    container: openjdk:11.0.1-jdk-slim-stretch
    name: Build and test
    steps:
      - uses: actions/checkout@v1
      - name: Test
        run: ./gradlew test
      - name: Persist build
        uses: actions/upload-artifact@master
        with:
          name: build
          path: ./build
  jacoco:
    runs-on: ubuntu-latest
    container: openjdk:11.0.1-jdk-slim-stretch
    needs: build_and_test
    steps:
      - uses: actions/checkout@v1
      - uses: actions/download-artifact@master
        with:
          name: build
          path: ./build
      - name: Jacoco reports
        run: ./gradlew testCoverage
      - name: Persist test results
        if: always()
        uses: actions/upload-artifact@v1
        with:
          name: jacoco
          path: ./build/jacocoHtml
      - name: Persist build
        uses: actions/upload-artifact@master
        with:
          name: build
          path: ./build
  upload_coverage:
    runs-on: ubuntu-latest
    container: openjdk:11.0.1-jdk-slim-stretch
    needs: jacoco
    steps:
      - uses: actions/checkout@v1
      - uses: actions/download-artifact@master
        with:
          name: build
          path: ./build
      - name: Set Git branch and SHA for Codacy
        run: |
          if [ "${{ github.event_name }}" = "pull_request" ]
          then
            echo ::set-env name=GIT_BRANCH::${{ github.head_ref }}
            echo ::set-env name=GIT_COMMIT_SHA::${{ github.event.pull_request.head.sha }}
          else
            echo ::set-env name=GIT_BRANCH::$(echo $GITHUB_REF | cut -c12-)
            echo ::set-env name=GIT_COMMIT_SHA::$GITHUB_SHA
          fi
      - uses: ./.github/actions/codacy
        with:
          reportPath: build/reports/jacoco/test/jacocoTestReport.xml
          codacyToken: ${{ secrets.CODACY_PROJECT_TOKEN }}
          commitId: $GIT_COMMIT_SHA
  quality_gate:
    runs-on: ubuntu-latest
    container: openjdk:11.0.1-jdk-slim-stretch
    needs: jacoco
    steps:
      - uses: actions/checkout@v1
      - uses: actions/download-artifact@master
        with:
          name: build
          path: ./build
      - run: ./gradlew jacocoTestCoverageVerification
  ktlint:
    runs-on: ubuntu-latest
    container: openjdk:11.0.1-jdk-slim-stretch
    steps:
      - uses: actions/checkout@v1
      - uses: ./.github/actions/ktlint
        with:
          githubToken: ${{ secrets.GITHUB_TOKEN }}

